<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chris-rock</title>
    <atom:link href="http://chris-rock.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://chris-rock.github.io</link>
    <description>fun &amp; sun</description>
    <pubDate>Wed, 14 May 2014 02:00:00 +0200</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>How to harden a new server with Chef</title>
      <link>http://chris-rock.github.io/articles/how-to-harden-a-new-server/</link>
      <pubDate>Wed, 14 May 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://chris-rock.github.io/articles/how-to-harden-a-new-server/</guid>
      <author></author>
      <description>&lt;p&gt;Deutsche Telekom developed scripts in Chef and Puppet to harden servers according to well-known guidelines like bettercrypto and internal guidelines at Deutsche Telekom.&lt;/p&gt;
&lt;p&gt;Disclosure: I am core developer at this project.&lt;/p&gt;
&lt;p&gt;Today we cook with &lt;a href=&quot;http://matschaffer.github.io/knife-solo/&quot;&gt;knife-solo&lt;/a&gt; and harden a fresh copy of Ubuntu 14.04. The process of hardening a server is quite difficult and takes a lot of knowledge and experience. Even the most-experienced administrators rely on guidelines to meet the best practices.&lt;/p&gt;
&lt;p&gt;Since we live in a cloud world by now, &lt;a href=&quot;http://arlimus.github.io/&quot;&gt;Dominik Richter&lt;/a&gt;, Patrick Meier and myself invented the `Security Automation Toolkit. It is a set of cookbooks that help you to secure your server with well-known rules. &lt;/p&gt;
&lt;p&gt;The following steps illustrate the hardening process of a fresh server with nothing than a base Linux system.&lt;/p&gt;
&lt;p&gt;At first of all we need to install &lt;code&gt;knife-solo&lt;/code&gt; via &lt;code&gt;gem&lt;/code&gt; on your workstation.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;âˆ…&amp;gt; &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; gem install knife-solo
Fetching: method_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed method_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Fetching: slop-&lt;span class=&quot;number&quot;&gt;3.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed slop-&lt;span class=&quot;number&quot;&gt;3.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: coderay-&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed coderay-&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: pry-&lt;span class=&quot;number&quot;&gt;0.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.pre2.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed pry-&lt;span class=&quot;number&quot;&gt;0.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.pre2
Fetching: chef-zero-&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed chef-zero-&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Fetching: diff-lcs-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed diff-lcs-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;
Fetching: highline-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed highline-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;
Fetching: net-ssh-gateway-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed net-ssh-gateway-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: net-ssh-multi-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed net-ssh-multi-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: mime-types-&lt;span class=&quot;number&quot;&gt;1.25&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed mime-types-&lt;span class=&quot;number&quot;&gt;1.25&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
Fetching: rest-client-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;.rc1.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed rest-client-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;.rc1
Fetching: ipaddress-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed ipaddress-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: mixlib-shellout-&lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed mixlib-shellout-&lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: mixlib-config-&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed mixlib-config-&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: mixlib-cli-&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed mixlib-cli-&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Fetching: systemu-&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed systemu-&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Fetching: ohai-&lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed ohai-&lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;
Fetching: chef-&lt;span class=&quot;number&quot;&gt;11.14&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.alpha.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Successfully installed chef-&lt;span class=&quot;number&quot;&gt;11.14&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.alpha.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Fetching: knife-solo-&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.gem (&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;%)
Thanks &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; installing knife-solo!

If you run into any issues please &lt;span class=&quot;built_in&quot;&gt;let&lt;/span&gt; us know at:
  https://github.com/matschaffer/knife-solo/issues

If you are upgrading knife-solo please uninstall any old versions by
running `gem clean knife-solo` to avoid any errors.

See http://bit.ly/CHEF-&lt;span class=&quot;number&quot;&gt;3255&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; more information on the knife bug
that causes this.
Successfully installed knife-solo-&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; chef-&lt;span class=&quot;number&quot;&gt;11.14&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.alpha.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; chef-zero-&lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
invalid options: -SNw2
(invalid options are ignored)
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; coderay-&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; diff-lcs-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; highline-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ipaddress-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; knife-solo-&lt;span class=&quot;number&quot;&gt;0.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; method_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; mime-types-&lt;span class=&quot;number&quot;&gt;1.25&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; mixlib-cli-&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; mixlib-config-&lt;span class=&quot;number&quot;&gt;2.1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; mixlib-shellout-&lt;span class=&quot;number&quot;&gt;1.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; net-ssh-gateway-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; net-ssh-multi-&lt;span class=&quot;number&quot;&gt;1.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ohai-&lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; pry-&lt;span class=&quot;number&quot;&gt;0.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;.pre2
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; rest-client-&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;.rc1
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; slop-&lt;span class=&quot;number&quot;&gt;3.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;
Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; systemu-&lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt; gems installed
âˆ…&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a next step we need to download the &lt;code&gt;hardening-kitchen&lt;/code&gt;. This comes with a set of hardening cookbooks and works out of the box. Youâ€™re free to extend the kitchen with your own cookbooks.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;git clone https://github.com/TelekomLabs/example-chef-hardening.git
&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; example-chef-hardening
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By now, the workstation is ready and we are able to bootstrap our server with Chef and our hardening cookbooks.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-bash&quot;&gt;knife solo bootstrap ubuntu@hardening.tlabscloud.com nodes/default.json 
Bootstrapping Chef...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15934&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15934&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;21847&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; --:--:-- --:--:-- --:--:-- &lt;span class=&quot;number&quot;&gt;21857&lt;/span&gt;
Downloading Chef &lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ubuntu...
downloading https://www.opscode.com/chef/metadata?v=&lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&amp;amp;prerelease=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;amp;nightlies=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&amp;amp;p=ubuntu&amp;amp;pv=&lt;span class=&quot;number&quot;&gt;14.04&lt;/span&gt;&amp;amp;m=x86_64
  to file /tmp/install.sh.&lt;span class=&quot;number&quot;&gt;30630&lt;/span&gt;/metadata.txt
trying wget...
url https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;/x86_64/chef_11.&lt;span class=&quot;number&quot;&gt;10.4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;_amd64.deb
md5 &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;e27eeaff3304df354e735a56005f04
sha256  &lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;fc3ef27419ec45281306b160e5f1e736a9846ad9060a151046d5a29c49af6b
yolo    &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;
downloaded metadata file looks valid...
downloading https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;/x86_64/chef_11.&lt;span class=&quot;number&quot;&gt;10.4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;_amd64.deb
  to file /tmp/install.sh.&lt;span class=&quot;number&quot;&gt;30630&lt;/span&gt;/chef_11.&lt;span class=&quot;number&quot;&gt;10.4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;_amd64.deb
trying wget...
Comparing checksum with sha256sum...

WARNING: Chef-Client has not been regression tested on this O/S Distribution
WARNING: Do not use this configuration &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Production Applications.  Use at your own risk.

Installing Chef &lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;
installing with dpkg...
dpkg: warning: downgrading chef from &lt;span class=&quot;number&quot;&gt;11.12&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; to &lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;
(Reading database ... &lt;span class=&quot;number&quot;&gt;62386&lt;/span&gt; files and directories currently installed.)
Preparing to unpack .../chef_11.&lt;span class=&quot;number&quot;&gt;10.4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;_amd64.deb ...
Unpacking chef (&lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;) over (&lt;span class=&quot;number&quot;&gt;11.12&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) ...
Setting up chef (&lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;.ubuntu.&lt;span class=&quot;number&quot;&gt;13.04&lt;/span&gt;) ...
Thank you &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; installing Chef!
Running Chef on hardening.tlabscloud.com...
Installing Berkshelf cookbooks to &lt;span class=&quot;string&quot;&gt;'cookbooks'&lt;/span&gt;...
Installing os-hardening (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) from site: &lt;span class=&quot;string&quot;&gt;'http://cookbooks.opscode.com/api/v1/cookbooks'&lt;/span&gt;
Installing ssh-hardening (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) from site: &lt;span class=&quot;string&quot;&gt;'http://cookbooks.opscode.com/api/v1/cookbooks'&lt;/span&gt;
Using sysctl (&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)
Using ntp (&lt;span class=&quot;number&quot;&gt;1.6&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)
Using apt (&lt;span class=&quot;number&quot;&gt;2.3&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)
Using yum (&lt;span class=&quot;number&quot;&gt;2.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)
Uploading the kitchen...
Generating solo config...
Running Chef...
Starting Chef Client, version &lt;span class=&quot;number&quot;&gt;11.10&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;
[&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;T14:&lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;] WARN: unable to detect ip6address
Compiling Cookbooks...
[&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;T14:&lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;00&lt;/span&gt;] WARN: encrypted_data_bag_Secret is &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; but file does not exist. Unsetting
/home/ubuntu/chef-solo/cookbooks-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/chef-solo-search/libraries/search.rb:&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;: warning: already initialized constant PARSER_LOADED

...

Chef Client finished, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;45&lt;/span&gt; resources updated &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4.206405118&lt;/span&gt; seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In less than 5 minutes, a new server is hardened for the core system and ssh. Be aware that your server still needs some configuration in order to be production ready. For that I recommend to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Configure  your firewall properly&lt;/li&gt;
&lt;li&gt;Install  critical patches&lt;/li&gt;
&lt;li&gt;Use patch management&lt;/li&gt;
&lt;li&gt;Use system monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More information is available at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://telekomlabs.github.io/&quot;&gt;http://telekomlabs.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TelekomLabs/example-chef-hardening&quot;&gt;https://github.com/TelekomLabs/example-chef-hardening&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://community.opscode.com/cookbooks/os-hardening&quot;&gt;http://community.opscode.com/cookbooks/os-hardening&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://community.opscode.com/cookbooks/ssh-hardening&quot;&gt;http://community.opscode.com/cookbooks/ssh-hardening&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy Hardening!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>SHA 512 Hashs with nodejs</title>
      <link>http://chris-rock.github.io/articles/nodejs-sha512/</link>
      <pubDate>Sun, 06 Apr 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://chris-rock.github.io/articles/nodejs-sha512/</guid>
      <author></author>
      <description>&lt;p&gt;Quite often you need to encrypt files. Recently I updated an application from encryption to &lt;a href=&quot;http://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;authenticated encryption&lt;/a&gt; and used the encrypt-then-mac approach. &lt;/p&gt;
&lt;p&gt;To create a hash from strings you just need a few lines in nodejs:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// generate a hash from string&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; crypto = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'crypto'&lt;/span&gt;),
        text = &lt;span class=&quot;string&quot;&gt;'hello bob'&lt;/span&gt;,
        key = &lt;span class=&quot;string&quot;&gt;'mysecret key'&lt;/span&gt;

    &lt;span class=&quot;comment&quot;&gt;// create hahs&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hash = crypto.createHmac(&lt;span class=&quot;string&quot;&gt;'sha512'&lt;/span&gt;, key)
    hash.update(text)
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; value = hash.digest(&lt;span class=&quot;string&quot;&gt;'hex'&lt;/span&gt;)

    &lt;span class=&quot;comment&quot;&gt;// print result&lt;/span&gt;
    console.log(value);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The great thing about the nodejs implementation of &lt;code&gt;Hash&lt;/code&gt; is the possibility to stream data directly into the hash:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// generate a hash from file stream&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; crypto = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'crypto'&lt;/span&gt;),
        fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'fs'&lt;/span&gt;),
        key = &lt;span class=&quot;string&quot;&gt;'mysecret key'&lt;/span&gt;

    &lt;span class=&quot;comment&quot;&gt;// open file stream&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fstream = fs.createReadStream(&lt;span class=&quot;string&quot;&gt;'./test/hmac.js'&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hash = crypto.createHash(&lt;span class=&quot;string&quot;&gt;'sha512'&lt;/span&gt;, key);
    hash.setEncoding(&lt;span class=&quot;string&quot;&gt;'hex'&lt;/span&gt;);

    &lt;span class=&quot;comment&quot;&gt;// once the stream is done, we read the values&lt;/span&gt;
    fstream.on(&lt;span class=&quot;string&quot;&gt;'end'&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;
        hash.end();
        &lt;span class=&quot;comment&quot;&gt;// print result&lt;/span&gt;
        console.log(hash.read());
    });

    &lt;span class=&quot;comment&quot;&gt;// pipe file to hash generator&lt;/span&gt;
    fstream.pipe(hash);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Happy Hashing.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Open Stack Glance Image Create</title>
      <link>http://chris-rock.github.io/articles/glance-image-create/</link>
      <pubDate>Thu, 03 Apr 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://chris-rock.github.io/articles/glance-image-create/</guid>
      <author></author>
      <description>&lt;p&gt;The newest version of Ubuntu is out and we need to upload the latest version to Open Stack. Of course we try to save our bandwith. There we use &lt;code&gt;-copy-from&lt;/code&gt; instead of &lt;code&gt;--file openstack_image.img&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;glance image-create --name &amp;#39;Ubuntu 14.04 LTS&amp;#39; \
  --container-format bare \
  --disk-format qcow2 \
  --is-public true \
  --copy-from http://uec-images.ubuntu.com/releases/14.04/release/ubuntu-14.04-server-cloudimg-amd64-disk1.img


+------------------+--------------------------------------+
| Property         | Value                                |
+------------------+--------------------------------------+
| checksum         | None                                 |
| container_format | bare                                 |
| created_at       | 2014-04-02T13:16:20                  |
| deleted          | False                                |
| deleted_at       | None                                 |
| disk_format      | qcow2                                |
| id               | aa5ab6de-e461-4330-136e-fb149802bdc0 |
| is_public        | True                                 |
| min_disk         | 0                                    |
| min_ram          | 0                                    |
| name             | Ubuntu 14.04 LTS Beta 1              |
| owner            | 9ab2f1a7ca521eee9c8de5a14567d377     |
| protected        | False                                |
| size             | 261095936                            |
| status           | queued                               |
| updated_at       | 2014-04-02T13:16:20                  |
+------------------+--------------------------------------+
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Open Stack VM Resizing</title>
      <link>http://chris-rock.github.io/articles/openstack-vm-resize/</link>
      <pubDate>Wed, 02 Apr 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://chris-rock.github.io/articles/openstack-vm-resize/</guid>
      <author></author>
      <description>&lt;p&gt;Once in a while you need to upgrade a VM with more CPU or storage.&lt;/p&gt;
&lt;h2 id=&quot;step-1-vm-preparation&quot;&gt;Step 1: VM preparation&lt;/h2&gt;
&lt;p&gt;A normal VM running on Openstack is well prepared for flavor resizing. Our observations just brought up the network configuration as a central point of failure. Especially RedHat-based machines fix the network config in various files. e.g. for CentOS&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ensure the vm is properly prepared
rm /etc/udev/rules.d/70-persistent-net.rules 
touch /etc/udev/rules.d/70-persistent-net.rules

# remove hardware specific settings /etc/sysconfig/network-scripts
sed -i &amp;#39;/UUID/d&amp;#39; /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i &amp;#39;/HWADDR/d&amp;#39; /etc/sysconfig/network-scripts/ifcfg-eth0
sed -i &amp;#39;/IPADDR/d&amp;#39; /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The vm is properly prepared by now.&lt;/p&gt;
&lt;h2 id=&quot;step-2-take-a-snapshot&quot;&gt;Step 2: Take a snapshot&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# create a snapshot and not down the image id
nova image-create $INSTANCEID $IMAGENAME
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;step-3-test-the-snapshot&quot;&gt;Step 3: Test the snapshot&lt;/h2&gt;
&lt;p&gt;Before we delete the old machine, we need to test the snapshot to ensure the network config is properly done and we are able to log into the new machine.&lt;/p&gt;
&lt;h2 id=&quot;step-4-gather-machine-details&quot;&gt;Step 4: Gather machine details&lt;/h2&gt;
&lt;p&gt;Now, we collect all the information of the existing instance&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# show instance details
nova show $INSTANCEID

# display the network details (you need the id and the subnet id)
neutron net-list

# select the new flavor id
nova flavor-list
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;destroy-the-old-machine&quot;&gt;Destroy the old machine&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;nova delete $INSTANCEID
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;create-network-port&quot;&gt;Create network port&lt;/h2&gt;
&lt;p&gt;In some cases you need to keep the same ip adress. Neutron helps to assign a specific port with the new machine.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;neutron port-create --fixed-ip subnet_id=$SUBNET_ID,ip_address=$IP $NETWORK_ID
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;recreate-machine&quot;&gt;Recreate machine&lt;/h2&gt;
&lt;p&gt;Now we are ready to re-create the machine&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
VMNAME=machine1
FLAVOR=4
IMAGE=63924226-e5ca-4ee6-a663-b2c89b0aa985
SG=ssh,http,default
PORT=f3999e60-9e53-4929-a9b2-ed3ab8ecf25d
KEYNAME=key
nova boot $VMNAME --flavor=$FLAVOR --image=$IMAGE --security-groups=$SG --nic port-id=$POST --key_name=$KEYNAME
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In case you do not use the specific port, switch &lt;code&gt;port-id&lt;/code&gt; with &lt;code&gt;net-id&lt;/code&gt; and the network id gathered with &lt;code&gt;neutron net-list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Happy resizing.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Havana Box</title>
      <link>http://chris-rock.github.io/articles/havana-box/</link>
      <pubDate>Mon, 28 Oct 2013 01:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://chris-rock.github.io/articles/havana-box/</guid>
      <author></author>
      <description>&lt;center&gt;&lt;a href=&quot;http://www.flickr.com/photos/fixedgear/2998411614/&quot; title=&quot;Havana by fixedgear, on Flickr&quot;&gt;&lt;img src=&quot;http://farm4.staticflickr.com/3161/2998411614_787b7717b2_q.jpg&quot; width=&quot;150px&quot; height=&quot;150px&quot; alt=&quot;Havana&quot; style=&quot;margin:0px&quot;&gt;&lt;/a&gt;&lt;/center&gt;



&lt;p&gt;&lt;a href=&quot;http://www.openstack.org/software/havana/&quot;&gt;OpenStack Havana&lt;/a&gt; has just been released. It offers a bunch of new features. Everything is well documented in their &lt;a href=&quot;https://wiki.openstack.org/wiki/ReleaseNotes/Havana&quot;&gt;Release Notes&lt;/a&gt;. It is nice to read, but I need a test drive.&lt;/p&gt;
&lt;p&gt;We are using Open Stack heavily and test new releases via &lt;a href=&quot;http://devstack.org/&quot;&gt;DevStack&lt;/a&gt; before we deploy new releases in our staging environment. What would be easier than trying Havana with a &lt;a href=&quot;http://www.vagrantup.com/&quot;&gt;vagrant box&lt;/a&gt;. You find my vagrant setup at Github &lt;a href=&quot;https://github.com/chris-rock/vagrant-devstack&quot;&gt;https://github.com/chris-rock/vagrant-devstack&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/chris-rock/vagrant-devstack.git
Cloning into &amp;#39;vagrant-devstack&amp;#39;...
remote: Counting objects: 34, done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 34 (delta 11), reused 34 (delta 11)
Unpacking objects: 100% (34/34), done.
Checking connectivity...done
$ cd vagrant-devstack
$ vagrant up
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After a cup of tea you should have the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Horizon is now available at http://192.168.50.10/
Keystone is serving at http://192.168.50.10:5000/v2.0/
Examples on using novaclient command line is in exercise.sh
The default users are: admin and demo
The password: devstack
This is your host ip: 192.168.50.10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you type &lt;a href=&quot;http://192.168.50.10/&quot;&gt;http://192.168.50.10&lt;/a&gt; in your browser and log into the OpenStack environment with &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;devstack&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/01_openstack_login.png&quot; alt=&quot;Alt text&quot; title=&quot;Horizon Dashboard Login&quot;&gt;&lt;/p&gt;
&lt;p&gt;Then click on the project &lt;code&gt;demo&lt;/code&gt; or &lt;code&gt;admin&lt;/code&gt; on the left hand.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/02_openstack_dashboard.png&quot; alt=&quot;Alt text&quot; title=&quot;Dashboard&quot;&gt;&lt;/p&gt;
&lt;p&gt;Start creating your instance and select the Cirros OS as an image. Of course you could upload new images via&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; glance image-create --name YourImage --container-format ovf --disk-format qcow2 --file image_openstack_image.img --is-public True
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/03_openstack_createinstance.png&quot; alt=&quot;Alt text&quot; title=&quot;Optional title&quot;&gt;&lt;/p&gt;
&lt;p&gt;After your created the machine, the image will be spawned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/04_openstack_machines.png&quot; alt=&quot;Alt text&quot; title=&quot;Optional title&quot;&gt;&lt;/p&gt;
&lt;p&gt;Click on the machine details and the console log to see the progress of the machine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/05_openstack_machinedetail.png&quot; alt=&quot;Alt text&quot; title=&quot;Optional title&quot;&gt;&lt;/p&gt;
&lt;p&gt;Finally log into the machine via the NoVNC client.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chris-rock.github.io/articles/havana-box/06_openstack_runningmachine.png&quot; alt=&quot;Alt text&quot; title=&quot;Optional title&quot;&gt;&lt;/p&gt;
&lt;p&gt;In case you find bugs, I am happy to merge &lt;a href=&quot;https://github.com/chris-rock/vagrant-devstack&quot;&gt;pull requests&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/chris-rock/vagrant-devstack&quot;&gt;&lt;img id=&quot;fork-me-ribbon&quot; src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png&quot; alt=&quot;Fork me on GitHub&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>